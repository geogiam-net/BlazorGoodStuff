@page "/counter"
@layout Layout2;


<PageTitle>Counter</PageTitle>

<h1>Counter</h1>

<p role="status">
    Current count: 
    <span class="@BackgroundColor">
        @CurrentCount
    </span>

</p>

<p>
    <!--
    "The keypress event is fired when a key that produces a character value is pressed down. Examples of keys that produce a character value are alphabetic, numeric, and punctuation keys."
    You should use onkeyup or onkeydown for non printable characters. This is a browser thing, and not related to blazor. 
    -->

    Press + or -<input type="number" @bind-value="@IncrementFactor" @onkeypress="OnIncrementFactorKeyPressed" @onkeypress:preventDefault="true" @onclick:stopPropagation="true" />
</p>

<p>
    Type a number <input type="number" @bind-value="@IncrementFactor" />
</p>

<p>
    <!-- The same in a verbose way -->
    Type a number <input type="number" value="@IncrementFactor" @onchange="@((ChangeEventArgs e) => IncrementFactor = int.Parse($"{e.Value}"))" />
</p>

<!-- disabled logic would be better of course as attribute in c sharp -->
<button class="btn btn-primary" disabled="@(CurrentCount > 10)" @onclick="IncrementCount">Increment</button>

@code {
    // one way data binding
    private int CurrentCount = 0;
    private int IncrementFactor = 1;

    private void IncrementCount(MouseEventArgs e)
    {
        if (e.CtrlKey)
        {
            CurrentCount -= IncrementFactor;
        }
        else
        {
            CurrentCount += IncrementFactor;
        }
    }

    // one way attribute binding
    private string BackgroundColor => (CurrentCount % 2 == 0) ? "red-background" : "yellow-background";

    private void OnIncrementFactorKeyPressed(KeyboardEventArgs e)
    {
        if (e.Key == "+")
        {
            IncrementFactor += 1;    
        }
        else if (e.Key == "-")
        {
            IncrementFactor -= 1;
        }
    }





}
